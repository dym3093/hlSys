<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:ns2="http://cxf.apache.org/bindings"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd     
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-2.5.xsd     
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd   
	http://cxf.apache.org/jaxws 
	http://cxf.apache.org/schemas/jaxws.xsd">
	<description>Spring公共配置文件</description>
	<context:property-placeholder location="classpath:application.properties, classpath:mailAcount.properties" />

	<!-- 读取配置文件 add by Dayton 2016-12-19 start -->
	<bean id="setting" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:mailAcount.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="UTF-8"></property>
	</bean>
	<!-- 读取配置文件 add by Dayton 2016-12-19 end -->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
	</bean>	
	
	<!-- add by YoumingDeng 2016-11-29  start -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
	</bean>
	<!-- add by YoumingDeng 2016-11-29  end -->
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource">
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath:/org/hpin/**/**/entity/*.hbm.xml</value>
				<value>classpath:/org/hpin/**/entity/*.hbm.xml</value>
				<value>classpath:/org/ymjy/**/**/entity/*.hbm.xml</value>
				<value>classpath:/org/ymjy/**/entity/*.hbm.xml</value>
				<value>classpath:/org/hpin/**/**/model/*.hbm.xml</value>
				<value>classpath:/com/hpin/**/model/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			<!--	<prop key="hibernate.connection.SetBigStringTryClob">true</prop>
			  	<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl_auto}</prop>-->
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
			</props>
		</property>
		<!-- add by YoumingDeng 2016-11-29  start -->
		<property name="lobHandler" ref="lobHandler"></property>
		<!-- add by YoumingDeng 2016-11-29  end -->
	</bean>


	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor" />

	<!--  HibernateDaoSupport -->
	<bean id="HibernateDaoSupport"
		class="org.hpin.common.core.orm.daoWrapper.HibernateDaoSupportWrapper">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<!--  JdbcDaoSupport -->
	<bean id="JdbcDaoSupport"
		class="org.hpin.common.core.orm.daoWrapper.JdbcDaoSupportWrapper">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	<!--  HibernateDaoSupport and JdbcDaoSupport -->
	<bean id="DaoSupport" class="org.hpin.common.core.orm.daoWrapper.DaoSupport">
		<property name="hibernateDaoSupport">
			<ref local="HibernateDaoSupport" />
		</property>
		<property name="jdbcDaoSupport">
			<ref local="JdbcDaoSupport" />
		</property>
	</bean>
	
	<!-- 全局SpringContext上下文 -->
	<bean id="SpringContextHolder" class = "org.hpin.common.core.SpringContextHolder"/>
	
	<bean id="org.hpin.common.core.orm.GenericDao" class="org.hpin.common.core.orm.GenericDao" />
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.hpin"/>
	
	<context:component-scan base-package="org.hpin"/>
	<context:component-scan base-package="org.ymjy"/>
	<context:component-scan base-package="com.ymjy"/>
	<context:component-scan base-package="cn.yuanmeng"/>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	
	<!-- ************************************************** -->	
	<!-- spring定时器 -->
	<bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
			<!-- 	<ref bean ="callTalkTimeTriggers"/>  -->
				<!-- <ref bean="jobCallTalkTime"/> -->
				 <!-- <ref bean="batchPrintJobTime"/> -->
				 <!-- <ref bean="reportJobTime"/> -->
				<!-- <ref bean="jpgJobTime"/> -->
				<!-- <ref bean="uploadPdf2PATime"/> -->
				<!-- <ref bean="customerSyncTime"/>   -->
				<!--<ref bean="CreatePhyReportPdfJobTime"/>-->
				<!--<ref bean="ReadFtpExcelJobTime"/>-->
				<!-- <ref bean="customerTestingTime"/> -->

				<!-- *******************  接口上的定时任务 add by Damian 2017-02-10 start ******************* -->
				<!--<ref bean="createScheduleJYTask"/>-->
				<!--<ref bean="downloadReportJYTask"/>-->
				<!--<ref bean="dealUnmatchScheduleTask"/>-->
				<!--<ref bean="pushStatusToHKTask"/>-->
				<!--超时打印任务-->
                <!--<ref bean="printTaskJobTrigger" /> 基础信息管理-公司信息页面增加两个查询条件：“总公司名称”“项目编号”。-->
				<!--<ref bean="sendMailOvertimeTask"/> &lt;!&ndash;超时4天&ndash;&gt;-->
				<!-- *******************  接口上的定时任务 add by Damian 2017-02-10 end ******************* -->
				<!-- 保存太平微磁的信息到消息推送表中 -->
				<!--<ref bean="savePushInfoTPWCTask" />-->
                <!--<ref bean="pushStatusToTPWCTask" />-->
                <!-- <ref bean="ReportPdfTrackJobTime" /> -->
                <!-- <ref bean="reportPassBackShenyouJobTime" />-->
                <!-- <ref bean="reportOverdueWarnJobTime" />-->
					<!-- 保存符合推送条件的客户信息 add by Damian 2017-04-18 -->
                	<!--<ref bean="savePushMsgTask"/>-->
				<!--客户状态消息推送 add by Damian 2017-04-18 -->
				<!--<ref bean="pushStatusToOtherTask"/>-->
			</list>
		</property>
	</bean>
	
    <!-- 第一步: 配置好要定时调用的业务类 --> 
     <bean id="callTalkTimeBean" class="cn.yuanmeng.labelprint.test.TestExcelProcess" /> 

	<!-- 第二步: 定义好具体要使用类的哪一个业务方法 -->
        <bean id="callTalkTimeJob"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
             <property name="targetObject" ref="callTalkTimeBean" /> <!-- 目标bean -->
             <property name="targetMethod" value="startTimmer" />   <!-- 要执行目标bean的哪一个业务方法 --> 
             <property name="concurrent" value="false"/> <!-- 是否并发 -->  
    </bean>  
     <!-- 第三步: 定义好调用模式: 如每天的23点30分调用一次 --> 
      <bean id="jobCallTalkTime" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
             <property name="jobDetail" ref="callTalkTimeJob" />
             <property name="cronExpression" value="0 30 23 * * ?" /> 
             <!-- <property name="cronExpression" value="0 0/3 * * * ?" />  -->
    </bean> 

	<!-- 匹配报告线程所需的service -->
	<bean id="reportThread" class="org.hpin.reportdetail.service.ErpReportThreadService">
		<property name="reportThreadDao">
			<ref local="DaoSupport" />
		</property>
	</bean>

	<!-- 每天2点定时回传申友已匹配报告定时任务create henry.xu 20170316 start-->
	<bean id="reportPassBackShenyou" class="org.hpin.reportdetail.job.ReportPassBackShenyouJob"></bean>
	
	<bean id="reportPassBackShenyouJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="reportPassBackShenyou" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="reportPassBackShenyouJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="reportPassBackShenyouJob" />
		<!-- <property name="cronExpression" value="0 0 2 * * ?" /> -->
		<property name="cronExpression" value="0 0/5 2 * * ?" />
	</bean>
	
	<!-- 每天2点定时回传申友已匹配报告定时任务 end-->
	<!-- 每天6点定时回传申友已匹配报告定时任务create henry.xu 20170316 start-->
	<bean id="reportOverdueWarn" class="org.hpin.reportdetail.job.ReportOverdueWarnJob"></bean>
	
	<bean id="reportOverdueWarnJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="reportOverdueWarn" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="reportOverdueWarnJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="reportOverdueWarnJob" />
		<property name="cronExpression" value="0 0/5 * * * ?" />
	</bean>
	
	<!-- 每天6点定时回传申友已匹配报告定时任务 end-->
	
	<!-- 读取PDF定时任务 start-->
	<bean id="reportTimeBean" class="org.hpin.reportdetail.job.ErpReportdetailJob">
		<property name="fileFromPath" value="${report.file.from.path}" />
		<property name="fileToPath" value="${report.file.to.path}" />
	</bean>
	
	<bean id="reportTimeJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="reportTimeBean" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="reportJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="reportTimeJob" />
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	
	<!-- 读取PDF定时任务 end-->
		
	<!-- 转换pdf为jpg start-->
	<bean id="pdf2JpgBean" class="org.hpin.reportdetail.job.ErpPdf2JpgJob">
		<property name="jpgToPath" value="${jpg.file.to.path}" />
		<property name="commonPage01" value="${imginfo.common.pages01}" />
		<property name="commonPage02" value="${imginfo.common.pages02}" />
		<property name="commonPage03" value="${imginfo.common.pages03}" />
		<property name="commonPage04" value="${imginfo.common.pages04}" />
		<property name="commonPage05" value="${imginfo.common.pages05}" />
	</bean>
	
	<bean id="pdf2JpgJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="pdf2JpgBean" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="jpgJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="pdf2JpgJob" />
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<!-- 转换pdf为jpg end-->
	
	<!-- 上传报告给平安 start-->
	<bean id="uploadPdf2PABean" class="org.hpin.reportdetail.job.ErpUploadPdf2PAJob">
		<property name="paAddress" value="${report.upload.pa.address}" />
	</bean>
	
	<bean id="uploadPdf2PAJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="uploadPdf2PABean" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="uploadPdf2PATime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="uploadPdf2PAJob" />
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<!-- 上传报告给平安 end-->
	
	<!-- 基因系统中当修改完善基因客户信息时满足条件调用CRM备案接口 start-->
	<bean id="customerSyncBean" class="org.hpin.events.job.ErpCustomerSyncJob">
	</bean>
	
	<bean id="customerSyncJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="customerSyncBean" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="customerSyncTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="customerSyncJob" />
		<property name="cronExpression" value="0 0 1 * * ?" />
	</bean>
	
	<!-- 基因公司套餐费用维护情况检测 -->
	<bean id="customerTestingBean" class="org.hpin.events.job.ErpCustomerTestingJob">
	</bean>
	
	<bean id="customerTestingJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="customerTestingBean" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="customerTestingTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="customerTestingJob" />
		<property name="cronExpression" value="0 0 12 * * ?" />
	</bean>
	
	<!-- 打印批次拆分 start-->
	<bean id="batchPrintJobBean" class="org.hpin.reportdetail.job.ErpReportWillPrintJob">
		<property name="localPath" value="${report.file.download.local.path}" />
	</bean>
	
	<bean id="batchPrintJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="batchPrintJobBean" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="batchPrintJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="batchPrintJob" />
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<!-- 打印批次拆分 end-->

	<!-- 发送超时打印任务的邮件 start -->
	<bean id="printTaskJobBean" class="org.hpin.reportdetail.job.ErpPrintTaskJob"/>

	<bean id="printTaskJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="printTaskJobBean" />
		<property name="targetMethod" value="sendMailAttention" />
		<property name="arguments" value="72" /> <!-- 超时的时限 72小时 -->
		<property name="concurrent" value="false" />
	</bean>

	<bean id="printTaskJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="printTaskJob" />
		<property name="cronExpression" value="0 0 0 * * ?" /> <!-- 每天0点0分开始发送 -->
	</bean>
	<!-- 发送超时打印任务的邮件 end -->

	<bean id="printTaskService" class="org.hpin.reportdetail.service.ErpPrintTaskService">
		<property name="localPath" value="${report.file.download.local.path}" />
		<property name="downloadContext" value="${report.file.download.context}" />
	</bean>
	
	<!-- 基因结算异常任务导出客户信息 -->
	<bean id="settlementTaskJYService" class="org.hpin.settlementManagement.service.ErpSettlementTaskJYService">
		<property name="localPath" value="${settleTask.file.download.local.path}" />
		<property name="downloadContext" value="${settleTask.file.download.context}" />
	</bean>
	
	<!--二维码销售导出excel信息 -->
	<bean id="erpQRCodeService" class="org.hpin.events.service.ErpQRCodeService">
		<property name="localPath" value="${erpQRcode.file.download.local.path}" />
		<property name="downloadContext" value="${erpQRcode.file.download.context}" />
	</bean>
	
	<!-- 儿童基因打印模板 -->
	<bean id="childrenPrintFile" class="org.hpin.children.service.ErpOrderInfoService">
		<property name="rootPath" value="${children.report.file.local.path}" />
	</bean>
	
	<!-- 会场费用管理的费用导出 -->
	<bean id="conferenceExcelFile" class="org.hpin.venueStaffSettlement.service.ConferenceCostManageService">
		<property name="conferenceExcel" value="${conference.excel.file.local.path}" />
	</bean>
	
	<!-- 打印公司套餐费费用明细导出 -->
	<bean id="printCostSettlementExcelFile" class="org.hpin.settlementManagement.service.ErpPrintTaskSettlementService">
		<property name="printCostSettlementExcel" value="${conference.excel.file.local.path}" />
	</bean>
	
	<!-- 读取ftp 1+X excel定时任务 start-->
	<bean id="ReadFtpExcelBean" class="org.hpin.physical.job.ReadFtpExcelJob">
	        <property name="fileFromPath" value="${xreport.file.from.path}" />
	        <property name="fileToPath" value="${xreport.file.to.path}" />
	</bean>
	
	<bean id="ReadFtpExcelJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	        <property name="targetObject" ref="ReadFtpExcelBean" />
	        <property name="targetMethod" value="execute" />
	        <property name="concurrent" value="false" />
	</bean>
	
	<bean id="ReadFtpExcelJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
	        <property name="jobDetail" ref="ReadFtpExcelJob" />
	        <property name="cronExpression" value="0 02 18 * * ?" />
	</bean>
	<!-- 读取ftp 1+X excel定时任务  end-->
	
	<!-- 读取判断PhyReport是否需要生成报告 定时任务 start-->
	<bean id="CreatePhyReportPdfBean" class="org.hpin.physical.job.CreatePhyReportPdfJob"></bean>
	
	<bean id="CreatePhyReportPdfJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	        <property name="targetObject" ref="CreatePhyReportPdfBean" />
	        <property name="targetMethod" value="execute" />
	        <property name="concurrent" value="false" />
	</bean>
	
	<bean id="CreatePhyReportPdfJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
	        <property name="jobDetail" ref="CreatePhyReportPdfJob" />
	        <property name="cronExpression" value="0 05 12 * * ?" />
	</bean>
	<!-- 读取判断PhyReport是否需要生成报告  end-->
	
	<!-- 1+X配置  start-->
	<bean id="phyReportDao" class="org.hpin.physical.dao.PhyReportDao"></bean>
	
	<bean id="PhysicalEtcPdfUtil" class="org.hpin.physical.util.PhysicalEtcPdfUtil">
	        <property name="rootPath" value="${physical.report.file.local.path}" />
	</bean>
	
	<bean id="AddSouthPdfUtil" class="org.hpin.physical.util.AddSouthPdfUtil">
	        <property name="rootPath" value="${physical.report.file.local.path}" />
	</bean>
	
	<bean id="PhysicalPrintPdfUtil" class="org.hpin.physical.util.PhysicalPrintPdfUtil">
	        <property name="rootPath" value="${physical.report.file.local.path}" />
	</bean>
	
	<bean id="CardiocerebralPdfUtil" class="org.hpin.physical.util.CardiocerebralPdfUtil">
	        <property name="rootPath" value="${physical.report.file.local.path}" />
	</bean>
	<!-- 1+X配置  end-->
	
	<!--  -->
	<!-- 预导入客户导出客户信息 -->
	<bean id="erpHKPrepCustomerService" class="org.hpin.warehouse.service.ErpHKPrepCustomerService">
		<property name="localPath" value="${prepCustomer.file.download.local.path}" />
		<property name="downloadContext" value="${prepCustomer.file.download.context}" />
	</bean>
	
	<!-- ****** 1+X 风险数据超时定时任务 add by leslieTong 2017-02-23 start ****** -->
	<!-- 1+X 风险数据超时定时任务 start-->
	<bean id="ReportPdfTrackBean" class="org.hpin.physical.job.PhyReportPdfTrack">
	        <property name="localPath" value="${phyReportPdfTrack.file.local.path}" />
	        <property name="downloadContext" value="${phyReportPdfTrack.file.download.context}" />
	</bean>
	
	<bean id="ReportPdfTrackJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	        <property name="targetObject" ref="ReportPdfTrackBean" />
	        <property name="targetMethod" value="execute" />
	        <property name="concurrent" value="false" />
	</bean>
	
	<bean id="ReportPdfTrackJobTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
	        <property name="jobDetail" ref="ReportPdfTrackJob" />
	        <property name="cronExpression" value="0 0 5 * * ?" />
	        
	</bean>
	<!-- 1+X 风险数据超时定时任务  end-->

	<!-- *******************  接口上的定时任务 add by Damian 2017-02-10 start ******************* -->
	<!-- 把金域传送的原始报告信息转存到定时下载报告的任务表中 -->
	<bean id="scheduleServiceJY" class="org.hpin.events.service.ErpScheduleJobService"/>

	<bean id="createScheduleJY" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY" />
		<property name="targetMethod" value="transferOrgData"/>
		<property name="concurrent" value="false"/>
	</bean>
	<!-- 转换原始数据的定时任务 -->
	<bean id="createScheduleJYTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="createScheduleJY"/>
		<property name="cronExpression" value="0 0/2 * * * ?"/> <!-- 每隔x分钟执行一次 -->
	</bean>

	<!-- 下载金域报告的定时任务 -->
	<bean id="downloadReportJY" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY"/>
		<property name="targetMethod" value="dealReport"/>
		<property name="concurrent" value="false"/>
	</bean>
	<!-- 下载金域报告 -->
	<bean id="downloadReportJYTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="downloadReportJY"/>
		<property name="cronExpression" value="0 0/2 * * * ?"/> <!-- 每隔10分钟执行一次 -->
	</bean>

	<!-- 处理异常的金域定时任务,与会员表进行重新匹配 -->
	<bean id="dealUnmatchSchedule" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY"/>
		<property name="targetMethod" value="dealUnmatchScheduleJY"/>
		<property name="arguments"  value="0,1"/><!-- 参数 -->
		<property name="concurrent" value="false"/>
	</bean>
	<!-- 处理异常的金域定时任务 -->
	<bean id="dealUnmatchScheduleTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="dealUnmatchSchedule"/>
		<property name="cronExpression" value="0 0/10 * * * ?"/> <!-- 每隔10分钟执行一次 -->
	</bean>

	<!-- 给弘康推送客户状态信息 start -->
	<bean id="pushStatusToHK" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY"/>
		<property name="targetMethod" value="pushStatusToHK"/>
		<property name="concurrent" value="false"/>
		<!--<property name="arguments">-->
			<!--<list>-->
				<!--<value>HK</value> &lt;!&ndash; 关键字 &ndash;&gt;-->
			<!--</list>-->
		<!--</property>-->
	</bean>
	<bean id="pushStatusToHKTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="pushStatusToHK"/>
		<property name="cronExpression" value="0 0/2 * * * ?"/> <!-- 每隔2分钟执行一次 -->
	</bean>
	<!-- 给弘康推送客户状态信息 end -->

	<!-- 发送超时提示邮件 start -->
	<bean id="sendMailOvertime" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY"/>
		<property name="targetMethod" value="sendMailOvertime"/>
		<property name="concurrent" value="false"/>
		<property name="arguments">
			<list>
				<value>96</value> <!-- 超时小时数 -->
				<value>400</value> <!-- 状态 -->
			</list>
		</property>
	</bean>
	<bean id="sendMailOvertimeTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="sendMailOvertime"/>
		<!-- 每天凌晨00：01触发 -->
		<property name="cronExpression" value="0 1 00 ? * *"/>
		<!--<property name="cronExpression" value="0 0/2 * * * ?"/>-->
	</bean>
	<!-- 发送超时提示邮件 end -->

	<!-- *******************  接口上的定时任务 add by Damian 2017-02-10 end ******************* -->

	<!-- 保存太平微磁（TPWC）的信息到消息推送表中 start -->
	<bean id="savePushInfoTPWC" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY"/>
		<property name="targetMethod" value="savePushInfoTPWC"/>
		<property name="arguments">
			<list>
				<value>S16C04NV</value> <!--项目编码-->
				<value>taipingwc</value> <!--渠道标识-->
			</list>
		</property>
		<property name="concurrent" value="false"/>
	</bean>
	<bean id="savePushInfoTPWCTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="savePushInfoTPWC"/>
		<!-- 每天凌晨00：02触发 -->
		<property name="cronExpression" value="0 2 00 ? * *"/>
		<!--<property name="cronExpression" value="0 0/2 * * * ?"/>-->
	</bean>
	<!-- 保存太平微磁（TPWC）的信息到消息推送表中 end -->

	<!-- 给太平微磁场推送客户状态信息 start -->
	<bean id="pushStatusToTPWC" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY"/>
		<property name="targetMethod" value="pushStatusToTPWC"/>
		<property name="concurrent" value="false"/>
	</bean>
	<bean id="pushStatusToTPWCTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="pushStatusToTPWC"/>
		<property name="cronExpression" value="0 0 6 * * ?"/> <!-- 每早上6点执行执行一次 -->
	</bean>
	<!-- 给太平微磁场推送客户状态信息 end -->

	<!-- 保存星宁基因（XN）的客户信息到消息推送表中 add by Damian 2017-04-18 start -->
	<bean id="savePushMsg" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY"/>
		<property name="targetMethod" value="savePushMsg"/>
		<property name="concurrent" value="false"/>
	</bean>
	<bean id="savePushMsgTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="savePushMsg"/>
		<property name="cronExpression" value="0 0/2 * * * ?"/>
	</bean>
	<!-- 保存星宁基因（XN）的客户信息到消息推送表中 end -->

	<!-- 客户状态信息消息推送 add by Damian 2017-04-18 start -->
	<bean id="pushStatusToOther" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleServiceJY"/>
		<property name="targetMethod" value="pushStatusToOther"/>
		<property name="concurrent" value="false"/>
	</bean>
	<bean id="pushStatusToOtherTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="pushStatusToOther"/>
		<property name="cronExpression" value="0 0/2 * * * ?"/>
	</bean>
	<!-- 客户状态信息消息推送 end -->

    <!-- 启动定时器 -->
	<!-- ************************************************** -->		
	
    <!-- 第一步: 配置好要定时调用的业务类 -->
    <!-- <bean id="callTalkTimeBean" class="org.hpin.expeditor.service.InfoRecordService" /> -->

	<!-- 第二步: 定义好具体要使用类的哪一个业务方法 -->
      <!--  <bean id="callTalkTimeJob"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  -->
            <!--   <property name="targetObject" ref="callTalkTimeBean" />-->  <!-- 目标bean -->
            <!--   <property name="targetMethod" value="getCallTalkTime" /> -->  <!-- 要执行目标bean的哪一个业务方法 --> 
           <!--    <property name="concurrent" value="false"/>  --><!-- 是否并发 -->  
    <!--</bean>  -->
     <!-- 第三步: 定义好调用模式: 如每隔2秒钟调用一次或每天的哪个时间调用一次等 --> 
         <!--  <bean id="jobCallTalkTime" class="org.springframework.scheduling.quartz.CronTriggerBean">  -->
            <!--   <property name="jobDetail" ref="callTalkTimeJob" />  -->
            <!--   <property name="cronExpression" value="0 0/30 * * * ?" />  --><!--每30分钟-->
   <!--  </bean>  -->
      
    <!-- 启动定时器 -->  

	<!-- 异步线程池  start-->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="100" />
		<!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="200" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	<!-- 异步线程池  end-->

</beans>
