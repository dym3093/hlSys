package org.hpin.foreign.dao;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;
import org.hpin.common.core.orm.BaseDao;
import org.hpin.foreign.entity.ErpMessagePush;
import org.springframework.stereotype.Repository;
import org.springframework.util.CollectionUtils;

import java.util.List;
import java.util.Map;

/**
 * 消息推送表DAO
 * Created by Damian on 17-1-1.
 */
@Repository
public class ErpMessagePushDao extends BaseDao {

    /**
     * 根据条件是否严格查找
     * @param params 条件集合
     * @param isExact true:equal查找，false:like查找
     * @return List
     */
    public List<ErpMessagePush> listByProps(Map<String,String> params, boolean isExact) throws Exception{
        List<ErpMessagePush> list = null;
        Session session;
        Criteria criteria;
        if(!CollectionUtils.isEmpty(params)){
            session = this.getHibernateTemplate().getSessionFactory().getCurrentSession();
            criteria = session.createCriteria(ErpMessagePush.class);

            for (String key : params.keySet()) {
                String value = params.get(key);
                System.out.println(key+" : "+value);
                if(key.equalsIgnoreCase(ErpMessagePush.F_ID)){
                    String[] idArr;
                    if(value.indexOf(",")!=-1){
                        int n = value.split(",").length;
                        idArr = new String[n] ;
                        idArr = value.split(",");
                    }else{
                        idArr = new String[1] ;
                        idArr[0] = value;
                    }
                    criteria.add(Restrictions.in(ErpMessagePush.F_ID, idArr));
                }else if (ErpMessagePush.F_STATUS.equalsIgnoreCase(key)){
                    criteria.add(Restrictions.eq(ErpMessagePush.F_STATUS, Integer.valueOf(value)));
                } else {
                    if(isExact){
                        criteria.add(Restrictions.eq(key, value));
                    }else{
                        criteria.add(Restrictions.like(key, value, MatchMode.ANYWHERE));
                    }
                }
            }
            list = criteria.list();
        }
        return list;
    }

    /**
     * 根据条件严格查找
     * @param params 条件集合
     * @return List
     */
    public List<ErpMessagePush> listByProps(Map<String,String> params) throws Exception{
        return this.listByProps(params,true);
    }

    /**
     * 根据条件查找太平微磁（TPWC）的相关信息
     * @param projCode 项目编号
     * @param mark 渠道标识
     * @return List
     * @throws Exception
     * @author DamianfindPushInfoTPWC
     * @since 2017-02-17
     */
    public List<Map<String, Object>> findPushInfoTPWC(String projCode, String mark) throws Exception {
        //查询前一天的数据
        String sql = "select c.code,c.name,c.phone,'300','',pi.employee_phone,pi.mark \n" +
                "  from hl_customer_relationship_pro pr, erp_reportdetail_pdfcontent pd,ERP_SALEMANNUM_INFO_PRE pi,erp_customer c \n" +
                " where pr.project_code = '"+projCode+"' \n" +
                "   and pr.customer_relationship_id = pd.branch_company \n" +
                "   and pd.createdate >= TRUNC(SYSDATE)-1 \n" +
                "   and pd.createdate < TRUNC(SYSDATE) \n" +
                "   and pd.filepath is not null and pd.matchstate=2 \n" +
                "   and pd.code=c.code \n" +
                "   and pd.username=c.name \n" +
                "   and pd.setmeal_name=c.setmeal_name \n" +
                "   and pi.employee_no=c.sales_man_no \n" +
                "   and pi.mark='"+mark+"' ";
        List<Map<String,Object>> list = this.getJdbcTemplate().queryForList(sql);
        return list;
    }

    /**
     * 批量保存推送消息
     * @param list 推送消息
     * @return int 消息数量
     * @throws Exception
     * @author Damian
     * @since 2017-02-17
     */
    public int saveList(List<ErpMessagePush> list) throws Exception{
        int count = 0;
        if (!CollectionUtils.isEmpty(list)){
            Session session = this.getHibernateTemplate().getSessionFactory().getCurrentSession();
            for (int i=0; i<list.size(); i++){
                if(i!=0&&i%100==0){
                    session.flush();
                    session.clear();
                }
                count += 1;
            }
            session.flush();
            session.clear();
        }
        return count;
    }
}
